From 8016b3f93b4ed959e56c8f9d03a0d95f5f5e4928 Mon Sep 17 00:00:00 2001
From: yousour <hengyousour@gmail.com>
Date: Fri, 13 Nov 2015 10:12:49 +0700
Subject: [PATCH] add backup & restore new version

---
 0001-add-btnfree-on-payment.patch                  |  84 +++++
 .../templates/backup_restore/backup_restore.html   |  44 +++
 .../templates/backup_restore/backup_restore.js     | 250 ++++++++++++++
 cpanel/client/templates/layout/main/footer.html    |  30 +-
 cpanel/client/templates/layout/main/header.html    |  42 +--
 cpanel/client/templates/layout/main/header.js      |  50 +--
 cpanel/client/templates/layout/main/main.html      | 152 ++++-----
 cpanel/client/templates/layout/main/main.js        |  90 ++---
 cpanel/client/templates/layout/main/navbar.html    |  63 ++--
 .../client/templates/layout/main/navbar_tool.html  |  24 ++
 cpanel/client/templates/layout/main/navbar_tool.js |  19 ++
 cpanel/common/collections/backup_restore.js        | 107 ++++++
 cpanel/common/lib/config/module.js                 |  41 ++-
 cpanel/common/lib/user_token.js                    |   4 +
 cpanel/common/routers/backup_restore.js            |  22 ++
 .../client/templates/backup & restore/backup.html  |  14 -
 dental/client/templates/backup & restore/backup.js |  65 ----
 .../client/templates/backup & restore/restore.html |  21 --
 .../client/templates/backup & restore/restore.js   |  43 ---
 dental/client/templates/layout/navbar.html         |  20 --
 dental/common/collections/backup.js                |  25 --
 dental/common/collections/restore.js               |  24 --
 dental/common/lib/config/module.js                 |  60 +++-
 dental/common/routers/backup.js                    |   7 -
 dental/common/routers/restore.js                   |   7 -
 packages/app-dump/.npm/package/.gitignore          |   1 +
 packages/app-dump/.npm/package/README              |   7 +
 packages/app-dump/.npm/package/npm-shrinkwrap.json | 373 +++++++++++++++++++++
 packages/app-dump/README.md                        |   1 +
 packages/app-dump/app-dump-tests.js                |   5 +
 packages/app-dump/app-dump.js                      | 157 +++++++++
 packages/app-dump/package.js                       |  42 +++
 32 files changed, 1425 insertions(+), 469 deletions(-)
 create mode 100644 0001-add-btnfree-on-payment.patch
 create mode 100644 cpanel/client/templates/backup_restore/backup_restore.html
 create mode 100644 cpanel/client/templates/backup_restore/backup_restore.js
 create mode 100644 cpanel/client/templates/layout/main/navbar_tool.html
 create mode 100644 cpanel/client/templates/layout/main/navbar_tool.js
 create mode 100644 cpanel/common/collections/backup_restore.js
 create mode 100644 cpanel/common/lib/user_token.js
 create mode 100644 cpanel/common/routers/backup_restore.js
 delete mode 100644 dental/client/templates/backup & restore/backup.html
 delete mode 100644 dental/client/templates/backup & restore/backup.js
 delete mode 100644 dental/client/templates/backup & restore/restore.html
 delete mode 100644 dental/client/templates/backup & restore/restore.js
 delete mode 100644 dental/common/collections/backup.js
 delete mode 100644 dental/common/collections/restore.js
 delete mode 100644 dental/common/routers/backup.js
 delete mode 100644 dental/common/routers/restore.js
 create mode 100644 packages/app-dump/.npm/package/.gitignore
 create mode 100644 packages/app-dump/.npm/package/README
 create mode 100644 packages/app-dump/.npm/package/npm-shrinkwrap.json
 create mode 100644 packages/app-dump/README.md
 create mode 100644 packages/app-dump/app-dump-tests.js
 create mode 100644 packages/app-dump/app-dump.js
 create mode 100644 packages/app-dump/package.js

diff --git a/0001-add-btnfree-on-payment.patch b/0001-add-btnfree-on-payment.patch
new file mode 100644
index 0000000..d4ffcbf
--- /dev/null
+++ b/0001-add-btnfree-on-payment.patch
@@ -0,0 +1,84 @@
+From 9e22093651463191a09d8e4d03c38d802ce3636a Mon Sep 17 00:00:00 2001
+From: yousour <hengyousour@gmail.com>
+Date: Tue, 10 Nov 2015 17:07:05 +0700
+Subject: [PATCH] add btnfree on payment
+
+---
+ dental/client/templates/payment/payment.html | 2 ++
+ dental/client/templates/payment/payment.js   | 6 ++++++
+ dental/common/collections/payment.js         | 6 +++---
+ 3 files changed, 11 insertions(+), 3 deletions(-)
+
+diff --git a/dental/client/templates/payment/payment.html b/dental/client/templates/payment/payment.html
+index b824d97..c9452ca 100644
+--- a/dental/client/templates/payment/payment.html
++++ b/dental/client/templates/payment/payment.html
+@@ -89,6 +89,7 @@
+         </div>
+ 
+         <button type="submit" class="btn btn-primary">{{fa "floppy-o"}} Save</button>
++        <button type="button" class="btn btn-success btnFree">{{fa "star"}} Free</button>
+         <button type="reset" class="btn btn-default">{{fa "refresh"}} Reset</button>
+     {{/autoForm}}
+ </template>
+@@ -162,6 +163,7 @@
+         </div>
+ 
+         <button type="submit" class="btn btn-primary">{{fa "floppy-o"}} Save</button>
++          <button type="button" class="btn btn-success btnFree">{{fa "star"}} Free</button>
+         <button type="reset" class="btn btn-default">{{fa "refresh"}} Reset</button>
+     {{/autoForm}}
+ </template>
+diff --git a/dental/client/templates/payment/payment.js b/dental/client/templates/payment/payment.js
+index 06e49cf..79988ce 100644
+--- a/dental/client/templates/payment/payment.js
++++ b/dental/client/templates/payment/payment.js
+@@ -90,6 +90,9 @@ Template.dental_paymentInsert.events({
+   },
+   'keyup .paidAmount': function() {
+     calculateBalance();
++  },
++  'click .btnFree': function(e, t) {
++    $('.dueAmount, .paidAmount, .balance').val(0);
+   }
+ });
+ 
+@@ -112,6 +115,9 @@ Template.dental_paymentUpdate.events({
+   },
+   'keyup .paidAmount': function() {
+     calculateBalance();
++  },
++  'click .btnFree': function(e, t) {
++    $('.dueAmount, .paidAmount, .balance').val(0);
+   }
+ });
+ 
+diff --git a/dental/common/collections/payment.js b/dental/common/collections/payment.js
+index 86526bf..3c0aeaa 100644
+--- a/dental/common/collections/payment.js
++++ b/dental/common/collections/payment.js
+@@ -49,10 +49,10 @@ Dental.Schema.Payment = new SimpleSchema({
+   paidAmount: {
+     type: Number,
+     decimal: true,
+-    min: 0.01,
++    min: 0,
+     custom: function() {
+       if (this.value > this.field('dueAmount').value) {
+-        return "greaterThan";
++        return "greaterThanDue";
+       }
+     },
+     label: 'Paid Amount'
+@@ -103,7 +103,7 @@ Dental.Collection.Payment.attachSchema(Dental.Schema.Payment);
+  * Custom Error Message
+  */
+ SimpleSchema.messages({
+-  "greaterThan": "Paid Amount Can't Be Greater Than Due Amount",
++  "greaterThanDue": "Paid Amount Can't Be Greater Than Due Amount",
+   "date": "Payment Date Can't Smaller Than " + moment().format(
+     'YYYY-MM-DD H:mm:ss')
+ });
+-- 
+1.9.1
+
diff --git a/cpanel/client/templates/backup_restore/backup_restore.html b/cpanel/client/templates/backup_restore/backup_restore.html
new file mode 100644
index 0000000..6284b56
--- /dev/null
+++ b/cpanel/client/templates/backup_restore/backup_restore.html
@@ -0,0 +1,44 @@
+<!--Backup-->
+<template name="cpanel_backup">
+    {{#autoForm schema=Cpanel.Schema.Backup id="cpanel_backup"}}
+        <div class="row">
+            <div class="col-md-6">
+                {{> afQuickField name='token' type="hidden"}}
+                {{> afQuickField name='module'}}
+                {{> afQuickField name='type' options=type}}
+            </div>
+            <div class="col-md-6">
+                {{> afQuickField name='branch' options=branch}}
+
+                <button type="submit" class="btn btn-primary">{{fa "download"}} Backup</button>
+                <button type="reset" class="btn btn-default">{{fa "refresh"}} Reset</button>
+            </div>
+        </div>
+    {{/autoForm}}
+</template>
+
+<!--Restore-->
+<template name="cpanel_restore">
+    {{#if restoreWaiting}}
+        {{> loading}}
+    {{/if}}
+
+    {{#autoForm schema=Cpanel.Schema.Restore id="cpanel_restore" enctype="multipart/form-data"}}
+        <div class="row">
+            <div class="col-md-6">
+                {{> afQuickField name='token' type="hidden"}}
+                {{> afQuickField name='module'}}
+                {{> afQuickField name='type' options=type}}
+                {{> afQuickField name='branch' options=branch}}
+            </div>
+            <div class="col-md-6">
+                {{> afQuickField name='dropCollections' type="hidden" value=dropCollections}}
+                {{> afQuickField name='dropQuery' type="hidden" value=dropQuery}}
+                {{> afQuickField name='restoreFile' accept=".tar"}}
+
+                <button type="submit" class="btn btn-primary">{{fa "upload"}} Restore</button>
+                <button type="reset" class="btn btn-default">{{fa "refresh"}} Reset</button>
+            </div>
+        </div>
+    {{/autoForm}}
+</template>
diff --git a/cpanel/client/templates/backup_restore/backup_restore.js b/cpanel/client/templates/backup_restore/backup_restore.js
new file mode 100644
index 0000000..134aea9
--- /dev/null
+++ b/cpanel/client/templates/backup_restore/backup_restore.js
@@ -0,0 +1,250 @@
+/**
+ * Backup
+ */
+var state = new ReactiveObj({
+    module: '',
+    type: '',
+    branch: ''
+});
+
+Template.cpanel_backup.helpers({
+    type: function () {
+        var module = state.get('module');
+        return typeForBackupRestore(module);
+    },
+    branch: function () {
+        var type = state.get('type');
+        return branchForBackupRestore(type);
+    }
+});
+
+Template.cpanel_backup.events({
+    'change [name="module"]': function (e, t) {
+        var module = $(e.currentTarget).val();
+        state.set('module', module);
+    },
+    'change [name="type"]': function (e, t) {
+        var type = $(e.currentTarget).val();
+        state.set('type', type);
+    }
+});
+
+// Hook
+AutoForm.hooks({
+    cpanel_backup: {
+        onSubmit: function (insertDoc, updateDoc, currentDoc) {
+            this.event.preventDefault();
+
+            var dumpUrl, filename, collections, query, module, type, branch;
+            module = insertDoc.module;
+            type = insertDoc.type;
+            branch = insertDoc.branch;
+
+            dumpUrl = '/appDump?';
+
+            collections = [];
+            if (module != 'all') {
+                if (type != 'all') {
+                    collections = Module[module]['dump'][type];
+                } else { // all
+                    _.each(Module[module]['dump'], function (type) {
+                        _.each(type, function (col) {
+                            collections.push(col);
+                        });
+                    });
+                }
+            }
+
+            query = {};
+            if (branch != 'all') {
+                query.branchId = branch;
+            }
+            filename = module + '_' + type + '_' + branch;
+
+            dumpUrl += 'token=' + insertDoc.token;
+            dumpUrl += '&filename=' + filename;
+            dumpUrl += '&collections=' + collections;
+            dumpUrl += '&query=' + JSON.stringify(query);
+
+            console.log(dumpUrl);
+
+            window.location.href = dumpUrl;
+            clearSelect2();
+            this.done();
+        }
+    }
+});
+
+/**
+ * Restore
+ */
+var restoreWaiting = new ReactiveVar(false);
+
+Template.cpanel_restore.helpers({
+    restoreWaiting: function () {
+        return restoreWaiting.get();
+    },
+    type: function () {
+        var module = state.get('module');
+        return typeForBackupRestore(module);
+    },
+    branch: function () {
+        var type = state.get('type');
+        return branchForBackupRestore(type);
+    },
+    dropCollections: function () {
+        var value = false;
+        var module = state.get('module');
+        var type = state.get('type');
+
+        if (!_.isEmpty(module)) {
+            if (module == 'all') {
+                value = true;
+            } else {
+                // Check type
+                if (type == 'all') {
+                    var colsList = [];
+                    _.each(Module[module].dump, function (cols) {
+                        _.each(cols, function (col) {
+                            colsList.push(col);
+                        })
+                    });
+                    value = colsList;
+                } else {
+                    value = Module[module]['dump'][type];
+                }
+            }
+        } else {
+            value = false;
+        }
+
+        return value;
+    },
+    dropQuery: function () {
+        var value = {};
+        var branch = state.get('branch');
+
+        if (_.isEmpty(branch) || branch == 'all') {
+            value = {};
+        } else {
+            value = {branchId: branch};
+        }
+
+        return JSON.stringify(value);
+    }
+});
+
+Template.cpanel_restore.events({
+    'change [name="module"]': function (e, t) {
+        var module = $(e.currentTarget).val();
+        state.set('module', module);
+    },
+    'change [name="type"]': function (e, t) {
+        var type = $(e.currentTarget).val();
+        state.set('type', type);
+    },
+    'change [name="branch"]': function (e, t) {
+        var branch = $(e.currentTarget).val();
+        state.set('branch', branch);
+    }
+});
+
+// Hook
+AutoForm.hooks({
+    cpanel_restore: {
+        onSubmit: function (insertDoc, updateDoc, currentDoc) {
+            var self = this;
+            self.event.preventDefault();
+            restoreWaiting.set(true);
+
+            var formData, $form;
+            $form = $('#cpanel_restore');
+            formData = new FormData($form[0]);
+
+            var restoreFile = insertDoc.restoreFile;
+            var filename = (restoreFile.split('\\').pop().split('/').pop().split('.'))[0];
+            var filenameArr = filename.split('_');
+            var module = filenameArr[0];
+            var type = filenameArr[1];
+            var branch = filenameArr[2];
+
+            /***** Check file name *****/
+            if (insertDoc.module != module || insertDoc.type != type || insertDoc.branch != branch) {
+                alertify.error('Restore file name don\'t match');
+                restoreWaiting.set(false);
+                clearSelect2();
+                self.done();
+                return false;
+            }
+
+            //console.log(insertDoc);
+            //restoreWaiting.set(false);
+            //self.done();
+            //return false;
+
+
+            return $.ajax({
+                type: 'POST',
+                url: '/appDump',
+                data: formData,
+                cache: false,
+                enctype: 'multipart/form-data',
+                contentType: false,
+                processData: false
+            }).done(function (data) {
+                console.log(data);
+                restoreWaiting.set(false);
+                Meteor.logout();
+                Router.go('cpanel.welcome');
+                alertify.success('Restore is successful');
+                self.done();
+                return false;
+            }).fail(function (err) {
+                console.log('Error restore: ' + err.responseText);
+            }).always(function () {
+                restoreWaiting.set(false);
+            });
+        }
+    }
+});
+
+// List
+var typeForBackupRestore = function (module) {
+    var list = [];
+
+    if (!_.isEmpty(module)) {
+        if (module == 'all' || module == 'Cpanel') {
+            list.push({label: '- All -', value: 'all'});
+        } else {
+            //list.push({label: '- All -', value: 'all'});
+            _.each(Module[module].dump, function (val, key) {
+                list.push({label: key, value: key});
+            });
+        }
+    }
+    list.unshift({label: '(Select One)', value: ''});
+
+    return list;
+};
+
+var branchForBackupRestore = function (type) {
+    var currentModule = Session.get('currentModule'),
+        currentBranch = Session.get('currentBranch'),
+        list = [];
+
+    if (!_.isEmpty(type)) {
+        // Check current module
+        if (type == 'all' || type == 'setting') {
+            list.push({label: '- All -', value: 'all'});
+        } else {
+            _.each(Meteor.user().rolesBranch, function (branch) {
+                var getBranch = Cpanel.Collection.Branch.findOne(branch);
+                list.push({label: getBranch.enName, value: getBranch._id});
+            });
+        }
+    }
+    list.unshift({label: '(Select One)', value: ''});
+
+    return list;
+};
+
diff --git a/cpanel/client/templates/layout/main/footer.html b/cpanel/client/templates/layout/main/footer.html
index ae07f5f..b7ff8f9 100644
--- a/cpanel/client/templates/layout/main/footer.html
+++ b/cpanel/client/templates/layout/main/footer.html
@@ -1,15 +1,15 @@
-<template name="footerLayout">
-    <!-- footer -->
-    <footer class="footer">
-        <div class="container">
-            <p class="text-muted">
-                <img style="display: inline-block" alt="Rabbit TC" width="20" height="20" src="/rabbit.png">
-                Rabbit Training Center
-                <i class="fa fa-copyright"></i> 2015,
-                <i class="fa fa-phone-square"></i> 053 50 66 777.
-            </p>
-        </div>
-    </footer>
-    <!-- /footer -->
-</template>
-
+<template name="footerLayout">
+    <!-- footer -->
+    <footer class="footer">
+        <div class="container">
+            <p class="text-muted">
+                <img style="display: inline-block" alt="Rabbit TC" width="20" height="20" src="/rabbit.png">
+                Rabbit Training Center
+                <i class="fa fa-copyright"></i> 2015,
+                <i class="fa fa-phone-square"></i> 053 50 66 777.
+            </p>
+        </div>
+    </footer>
+    <!-- /footer -->
+</template>
+
diff --git a/cpanel/client/templates/layout/main/header.html b/cpanel/client/templates/layout/main/header.html
index e2db3e7..1856f03 100644
--- a/cpanel/client/templates/layout/main/header.html
+++ b/cpanel/client/templates/layout/main/header.html
@@ -1,19 +1,23 @@
-<template name="headerLayout">
-    <!-- header -->
-    <div id="navbar" class="navbar-collapse collapse">
-        {{#if navbar.show}}
-            {{> Template.dynamic template=navbar.template}}
-        {{/if}}
-
-        <ul class="nav navbar-nav navbar-right">
-            {{#if currentBranch.show}}
-                <li class="{{isActiveRoute regex='cpanel.welcome'}}"><a href="{{pathFor 'cpanel.welcome'}}"><i class="fa fa-sitemap"></i> {{currentBranch.title}}
-                </a></li>
-            {{/if}}
-
-            {{> loginButtons}}
-        </ul>
-
-    </div>
-    <!-- /header -->
-</template>
+<template name="headerLayout">
+    <!-- header -->
+    <div id="navbar" class="navbar-collapse collapse">
+        <ul class="nav navbar-nav">
+            {{#if navbar.show}}
+                {{> Template.dynamic template=navbar.template}}
+                {{> cpanel_navbarTool}}
+            {{/if}}
+        </ul>
+
+        <ul class="nav navbar-nav navbar-right">
+            {{#if currentBranch.show}}
+                <li class="{{isActiveRoute regex='cpanel.welcome'}}"><a href="{{pathFor 'cpanel.welcome'}}"><i
+                        class="fa fa-sitemap"></i> {{currentBranch.title}}
+                </a></li>
+            {{/if}}
+
+            {{> loginButtons}}
+        </ul>
+
+    </div>
+    <!-- /header -->
+</template>
diff --git a/cpanel/client/templates/layout/main/header.js b/cpanel/client/templates/layout/main/header.js
index 34043fb..abe5f01 100644
--- a/cpanel/client/templates/layout/main/header.js
+++ b/cpanel/client/templates/layout/main/header.js
@@ -1,25 +1,25 @@
-/**
- * Helper
- */
-Template.headerLayout.helpers({
-    navbar: function () {
-        var module = Session.get('currentModule');
-        var branch = Session.get('currentBranch');
-        if (!Meteor.userId() || _.isUndefined(module) || _.isUndefined(branch)) {
-            return {show: false};
-        }
-
-        return {show: true, template: s.decapitalize(module) + '_navbar'};
-    },
-    currentBranch: function () {
-        var module = Session.get('currentModule');
-        var branch = Session.get('currentBranch');
-        if (_.isUndefined(module) || _.isUndefined(branch)) {
-            return {show: false};
-        }
-
-        var getBranch = Cpanel.Collection.Branch.findOne({_id: branch});
-        var title = branch + ' : ' + getBranch.enShortName;
-        return {show: true, title: title};
-    }
-});
+/**
+ * Helper
+ */
+Template.headerLayout.helpers({
+    navbar: function () {
+        var module = Session.get('currentModule');
+        var branch = Session.get('currentBranch');
+        if (!Meteor.userId() || _.isUndefined(module) || _.isUndefined(branch)) {
+            return {show: false};
+        }
+
+        return {show: true, template: s.decapitalize(module) + '_navbar'};
+    },
+    currentBranch: function () {
+        var module = Session.get('currentModule');
+        var branch = Session.get('currentBranch');
+        if (_.isUndefined(module) || _.isUndefined(branch)) {
+            return {show: false};
+        }
+
+        var getBranch = Cpanel.Collection.Branch.findOne({_id: branch});
+        var title = branch + ' : ' + getBranch.enShortName;
+        return {show: true, title: title};
+    }
+});
diff --git a/cpanel/client/templates/layout/main/main.html b/cpanel/client/templates/layout/main/main.html
index 6362abc..95964e1 100644
--- a/cpanel/client/templates/layout/main/main.html
+++ b/cpanel/client/templates/layout/main/main.html
@@ -1,76 +1,76 @@
-<head>
-    <link rel="icon" href="/favicon.ico">
-    <title>Rabbit Project</title>
-</head>
-
-<template name="mainLayout">
-    <body>
-
-    <!-- Fixed navbar -->
-    <nav class="navbar navbar-default navbar-fixed-top">
-        <div class="container">
-            <div class="navbar-header">
-                <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar"
-                        aria-expanded="false" aria-controls="navbar">
-                    <span class="sr-only">Toggle navigation</span>
-                    <span class="icon-bar"></span>
-                    <span class="icon-bar"></span>
-                    <span class="icon-bar"></span>
-                </button>
-                <!--<a class="navbar-brand" href="{{pathFor 'cpanel.welcome'}}">-->
-                <a class="navbar-brand" href="#">
-                    <!--<img style="display: inline" alt="Brand" width="20" height="20" src="/rabbit.png">-->
-                    {{appName}}
-                </a>
-            </div>
-
-            <!-- header -->
-            {{> headerLayout}}
-            <!-- /header -->
-
-        </div>
-    </nav>
-
-    <!-- Begin page content -->
-    <div class="container">
-
-        {{#unless notFound}}
-            {{#if currentUser}}
-                <div class="page-header">
-                    <h3>
-                        <!--Page header-->
-                        <i class="fa fa-{{header.icon}}"></i>
-                        {{header.title}}
-                        <small>{{header.sub}}</small>
-
-                        <!--Breadcrumb-->
-                        {{#if Breadcrumb}}
-                            <ol class="breadcrumb pull-right"
-                                style="display: inline; font-size: 12px; padding: 10px 0px; margin-bottom: 0px">
-                                {{#each Breadcrumb}}
-                                    {{#if cssClasses}}
-                                        <li class="{{cssClasses}}">{{title}}</li>
-                                    {{else}}
-                                        <li><a href="{{url}}">{{title}}</a></li>
-                                    {{/if}}
-                                {{/each}}
-                            </ol>
-                        {{/if}}
-                    </h3>
-                </div>
-            {{/if}}
-        {{/unless}}
-
-        {{> yield}}
-
-    </div>
-    <!-- /container -->
-
-    <!-- footer -->
-    {{> footerLayout}}
-    <!-- /footer -->
-
-    {{> meteorStatus}}
-
-    </body>
-</template>
+<head>
+    <link rel="icon" href="/favicon.ico">
+    <title>Rabbit Project</title>
+</head>
+
+<template name="mainLayout">
+    <body>
+
+    <!-- Fixed navbar -->
+    <nav class="navbar navbar-default navbar-fixed-top">
+        <div class="container">
+            <div class="navbar-header">
+                <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar"
+                        aria-expanded="false" aria-controls="navbar">
+                    <span class="sr-only">Toggle navigation</span>
+                    <span class="icon-bar"></span>
+                    <span class="icon-bar"></span>
+                    <span class="icon-bar"></span>
+                </button>
+                <!--<a class="navbar-brand" href="{{pathFor 'cpanel.welcome'}}">-->
+                <a class="navbar-brand" href="#">
+                    <!--<img style="display: inline" alt="Brand" width="20" height="20" src="/rabbit.png">-->
+                    {{appName}}
+                </a>
+            </div>
+
+            <!-- header -->
+            {{> headerLayout}}
+            <!-- /header -->
+
+        </div>
+    </nav>
+
+    <!-- Begin page content -->
+    <div class="container">
+
+        {{#unless notFound}}
+            {{#if currentUser}}
+                <div class="page-header">
+                    <h3>
+                        <!--Page header-->
+                        <i class="fa fa-{{header.icon}}"></i>
+                        {{header.title}}
+                        <small>{{header.sub}}</small>
+
+                        <!--Breadcrumb-->
+                        {{#if Breadcrumb}}
+                            <ol class="breadcrumb pull-right"
+                                style="display: inline; font-size: 12px; padding: 10px 0px; margin-bottom: 0px">
+                                {{#each Breadcrumb}}
+                                    {{#if cssClasses}}
+                                        <li class="{{cssClasses}}">{{title}}</li>
+                                    {{else}}
+                                        <li><a href="{{url}}">{{title}}</a></li>
+                                    {{/if}}
+                                {{/each}}
+                            </ol>
+                        {{/if}}
+                    </h3>
+                </div>
+            {{/if}}
+        {{/unless}}
+
+        {{> yield}}
+
+    </div>
+    <!-- /container -->
+
+    <!-- footer -->
+    {{> footerLayout}}
+    <!-- /footer -->
+
+    {{> meteorStatus}}
+
+    </body>
+</template>
diff --git a/cpanel/client/templates/layout/main/main.js b/cpanel/client/templates/layout/main/main.js
index e78a5b6..c28da62 100644
--- a/cpanel/client/templates/layout/main/main.js
+++ b/cpanel/client/templates/layout/main/main.js
@@ -1,45 +1,45 @@
-/**
- * Layout
- */
-Template.mainLayout.helpers({
-    appName: function () {
-        var module = Session.get('currentModule');
-        var branch = Session.get('currentBranch');
-        if (Meteor.userId() && !_.isUndefined(module) && !_.isUndefined(branch)) {
-            var moduleWord = s.words(module, ':');
-            return Module[moduleWord[0]].name;
-        }
-        return 'Rabbit Project';
-    },
-    notFound: function () {
-        return Session.get('notFound');
-    },
-    header: function () {
-        var header = {
-            title: null,
-            sub: null,
-            icon: null
-        };
-        var getHeader = Router.current().route.options.header;
-        if (_.isUndefined(getHeader)) {
-            return header;
-        }
-        header.title = s.titleize(s.humanize(getHeader.title));
-        header.sub = s.titleize(s.humanize(getHeader.sub));
-        header.icon = getHeader.icon;
-        return header;
-    }
-});
-
-Template.mainLayout.events({
-    'click .navbar-brand': function () {
-        var module = Session.get('currentModule');
-        if (!_.isUndefined(module)) {
-            var info = Module[module];
-            alertify.alert(info.summary)
-                .set({
-                    title: info.name + ' ' + info.version
-                });
-        }
-    }
-});
+/**
+ * Layout
+ */
+Template.mainLayout.helpers({
+    appName: function () {
+        var module = Session.get('currentModule');
+        var branch = Session.get('currentBranch');
+        if (Meteor.userId() && !_.isUndefined(module) && !_.isUndefined(branch)) {
+            var moduleWord = s.words(module, ':');
+            return Module[moduleWord[0]].name;
+        }
+        return 'Rabbit Project';
+    },
+    notFound: function () {
+        return Session.get('notFound');
+    },
+    header: function () {
+        var header = {
+            title: null,
+            sub: null,
+            icon: null
+        };
+        var getHeader = Router.current().route.options.header;
+        if (_.isUndefined(getHeader)) {
+            return header;
+        }
+        header.title = s.titleize(s.humanize(getHeader.title));
+        header.sub = s.titleize(s.humanize(getHeader.sub));
+        header.icon = getHeader.icon;
+        return header;
+    }
+});
+
+Template.mainLayout.events({
+    'click .navbar-brand': function () {
+        var module = Session.get('currentModule');
+        if (!_.isUndefined(module)) {
+            var info = Module[module];
+            alertify.alert(info.summary)
+                .set({
+                    title: info.name + ' ' + info.version
+                });
+        }
+    }
+});
diff --git a/cpanel/client/templates/layout/main/navbar.html b/cpanel/client/templates/layout/main/navbar.html
index 0c81f00..752f3d4 100644
--- a/cpanel/client/templates/layout/main/navbar.html
+++ b/cpanel/client/templates/layout/main/navbar.html
@@ -1,32 +1,31 @@
-<template name="cpanel_navbar">
-    <ul class="nav navbar-nav">
-        <li class="{{isActiveRoute name='cpanel.home'}}">
-            <a href="{{pathFor 'cpanel.home'}}">Home</a>
-        </li>
-        <li class="{{isActiveRoute name='cpanel.exchange'}}">
-            <a href="{{pathFor 'cpanel.exchange'}}">Exchange</a>
-        </li>
-        <li class="{{isActiveRoute name='capnel.eventReport'}}">
-            <a href="{{pathFor 'capnel.eventReport'}}">Event Report</a>
-        </li>
-        <li class="dropdown">
-            <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">
-                Setting <span class="caret"></span>
-            </a>
-            <ul class="dropdown-menu" role="menu">
-                <li class="{{isActiveRoute name='cpanel.branch'}}">
-                    <a href="{{pathFor 'cpanel.branch'}}">Branch</a>
-                </li>
-                <li class="{{isActiveRoute name='cpanel.company'}}">
-                    <a href="{{pathFor 'cpanel.company'}}">Company</a>
-                </li>
-                <li class="{{isActiveRoute name='cpanel.user'}}">
-                    <a href="{{pathFor 'cpanel.user'}}">User</a>
-                </li>
-                <li class="{{isActiveRoute name='cpanel.setting'}}">
-                    <a href="{{pathFor 'cpanel.setting'}}">Setting</a>
-                </li>
-            </ul>
-        </li>
-    </ul>
-</template>
+<template name="cpanel_navbar">
+        <li class="{{isActiveRoute name='cpanel.home'}}">
+            <a href="{{pathFor 'cpanel.home'}}">Home</a>
+        </li>
+        <li class="dropdown">
+            <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">
+                Data <span class="caret"></span>
+            </a>
+            <ul class="dropdown-menu" role="menu">
+                <li class="{{isActiveRoute name='cpanel.exchange'}}">
+                    <a href="{{pathFor 'cpanel.exchange'}}">Exchange</a>
+                </li>
+                <li class="{{isActiveRoute name='cpanel.branch'}}">
+                    <a href="{{pathFor 'cpanel.branch'}}">Branch</a>
+                </li>
+                <li class="{{isActiveRoute name='cpanel.company'}}">
+                    <a href="{{pathFor 'cpanel.company'}}">Company</a>
+                </li>
+                <li class="{{isActiveRoute name='cpanel.user'}}">
+                    <a href="{{pathFor 'cpanel.user'}}">User</a>
+                </li>
+                <li class="{{isActiveRoute name='cpanel.setting'}}">
+                    <a href="{{pathFor 'cpanel.setting'}}">Setting</a>
+                </li>
+
+                <!--<li class="{{isActiveRoute name='capnel.eventReport'}}">-->
+                    <!--<a href="{{pathFor 'capnel.eventReport'}}">Event Report</a>-->
+                <!--</li>-->
+            </ul>
+        </li>
+</template>
diff --git a/cpanel/client/templates/layout/main/navbar_tool.html b/cpanel/client/templates/layout/main/navbar_tool.html
new file mode 100644
index 0000000..4764495
--- /dev/null
+++ b/cpanel/client/templates/layout/main/navbar_tool.html
@@ -0,0 +1,24 @@
+<template name="cpanel_navbarTool">
+    <!--Tools-->
+    <li class="dropdown">
+        <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">
+            Tools <span class="caret"></span>
+        </a>
+        <ul class="dropdown-menu" role="menu">
+            <li class="{{isActiveRoute name='cpanel.backup'}}">
+                <a href="{{pathFor 'cpanel.backup'}}">Backup</a>
+            </li>
+
+            <!--Check restore-->
+            {{#if restore}}
+                <li class="{{isActiveRoute name='cpanel.restore'}}">
+                    <a href="{{pathFor 'cpanel.restore'}}">Restore</a>
+                </li>
+            {{/if}}
+
+            <!--<li class="{{isActiveRoute name='cpanel.about'}}">-->
+                <!--<a href="{{pathFor 'cpanel.about'}}">About</a>-->
+            <!--</li>-->
+        </ul>
+    </li>
+</template>
diff --git a/cpanel/client/templates/layout/main/navbar_tool.js b/cpanel/client/templates/layout/main/navbar_tool.js
new file mode 100644
index 0000000..de2bcf0
--- /dev/null
+++ b/cpanel/client/templates/layout/main/navbar_tool.js
@@ -0,0 +1,19 @@
+Template.cpanel_navbarTool.helpers({
+    helpPath: function () {
+        var currentModule = Session.get('currentModule');
+        var currentBranch = Session.get('currentBranch');
+        if (!Meteor.userId() || !currentModule || !currentBranch) {
+            return {show: false};
+        }
+        var bar = s.decapitalize(currentModule);
+
+        return {show: true, template: {left: bar + '_navbar', right: bar + '_navbarRight'}};
+    },
+    restore: function () {
+        var currentModule = Session.get('currentModule');
+        if (currentModule == 'Cpanel') {
+            return true
+        }
+        return false;
+    }
+});
diff --git a/cpanel/common/collections/backup_restore.js b/cpanel/common/collections/backup_restore.js
new file mode 100644
index 0000000..268ff5b
--- /dev/null
+++ b/cpanel/common/collections/backup_restore.js
@@ -0,0 +1,107 @@
+/**
+ * Schema
+ */
+Cpanel.Schema.Backup = new SimpleSchema({
+    token: {
+        type: String,
+        optional: true,
+        defaultValue: function () {
+            return userToken();
+        }
+    },
+    module: {
+        type: String,
+        label: 'Module',
+        autoform: {
+            type: 'select2',
+            options: function () {
+                return moduleForBackupRestore();
+            }
+        }
+    },
+    type: {
+        type: String,
+        label: 'Type',
+        autoform: {
+            type: 'select2'
+        }
+    },
+    branch: {
+        type: String,
+        label: 'Branch',
+        autoform: {
+            type: 'select2'
+        }
+    }
+});
+
+Cpanel.Schema.Restore = new SimpleSchema({
+    token: {
+        type: String,
+        optional: true,
+        defaultValue: function () {
+            return userToken();
+        }
+    },
+    module: {
+        type: String,
+        label: 'Module',
+        autoform: {
+            type: 'select2',
+            options: function () {
+                return moduleForBackupRestore();
+            }
+        }
+    },
+    type: {
+        type: String,
+        label: 'Type',
+        autoform: {
+            type: 'select2'
+        }
+    },
+    branch: {
+        type: String,
+        label: 'Branch',
+        autoform: {
+            type: 'select2'
+        }
+    },
+    restoreFile: {
+        type: String,
+        label: 'Restore file',
+        autoform: {
+            type: 'file'
+        }
+    },
+    dropCollections: {
+        type: String,
+        optional: true
+    },
+    dropQuery: {
+        type: String,
+        optional: true
+    }
+});
+
+// List
+var moduleForBackupRestore = function () {
+    var userId = Meteor.userId(),
+        currentModule = Session.get('currentModule'),
+        list = [];
+    list.push({label: "(Select One)", value: ""});
+
+    if (currentModule == 'Cpanel') {
+        list.push({label: "- All -", value: "all"});
+        Roles.getGroupsForUser(userId)
+            .forEach(function (group) {
+                var label = Module[group].name;
+                list.push({label: label, value: group});
+            });
+    } else {
+        var label = Module[currentModule].name;
+        list.push({label: label, value: currentModule});
+    }
+
+    return list;
+};
diff --git a/cpanel/common/lib/config/module.js b/cpanel/common/lib/config/module.js
index a861ab4..62db576 100644
--- a/cpanel/common/lib/config/module.js
+++ b/cpanel/common/lib/config/module.js
@@ -1,15 +1,26 @@
-/**
- * Module
- */
-Module = typeof Module === 'undefined' ? {} : Module;
-Meteor.isClient && Template.registerHelper('Module', Module);
-
-Module.Cpanel = {
-    name: 'Cpanel System',
-    version: '0.2.3',
-    summary: 'Cpanel Management System is ...',
-    roles: [
-        'super',
-        'admin'
-    ]
-};
+/**
+ * Module
+ */
+Module = typeof Module === 'undefined' ? {} : Module;
+Meteor.isClient && Template.registerHelper('Module', Module);
+
+Module.Cpanel = {
+    name: 'Cpanel System',
+    version: '0.2.3',
+    summary: 'Cpanel Management System is ...',
+    roles: [
+        'super',
+        'admin'
+    ],
+    dump: {
+        data: [
+            'roles',
+            'users',
+            'cpanel_setting',
+            'cpanel_currency',
+            'cpanel_company',
+            'cpanel_branch',
+            'cpanel_exchange'
+        ]
+    }
+};
diff --git a/cpanel/common/lib/user_token.js b/cpanel/common/lib/user_token.js
new file mode 100644
index 0000000..267d723
--- /dev/null
+++ b/cpanel/common/lib/user_token.js
@@ -0,0 +1,4 @@
+userToken = function () {
+    var token = typeof Accounts !== 'undefined' && Accounts !== null ? Accounts._storedLoginToken() : null;
+    return token;
+};
diff --git a/cpanel/common/routers/backup_restore.js b/cpanel/common/routers/backup_restore.js
new file mode 100644
index 0000000..8fba0e9
--- /dev/null
+++ b/cpanel/common/routers/backup_restore.js
@@ -0,0 +1,22 @@
+Router.route('cpanel/backup', function () {
+
+    this.render('cpanel_backup');
+
+}, {
+    name: 'cpanel.backup',
+    title: "Backup",
+    header: {title: 'backup', icon: 'download'},
+    breadcrumb: {title: 'Backup', parent: 'cpanel.welcome'}
+});
+
+Router.route('cpanel/restore', function () {
+
+    this.render('cpanel_restore');
+
+}, {
+    name: 'cpanel.restore',
+    title: "Restore",
+    header: {title: 'restore', icon: 'upload'},
+    breadcrumb: {title: 'Restore', parent: 'cpanel.welcome'}
+});
+
diff --git a/dental/client/templates/backup & restore/backup.html b/dental/client/templates/backup & restore/backup.html
deleted file mode 100644
index 0f1c514..0000000
--- a/dental/client/templates/backup & restore/backup.html	
+++ /dev/null
@@ -1,14 +0,0 @@
-<template name="dental_backup">
-    {{#autoForm schema=Dental.Schema.Backup id="dental_backup"}}
-        <div class="row">
-            <div class="col-md-6">
-                {{> afQuickField name='branch'}}
-            </div>
-            <div class="col-md-6">
-                {{> afQuickField name='backupType'}}
-            </div>
-        </div>
-        <button type="submit" class="btn btn-primary" >Backup</button>
-        <button type="reset" class="btn btn-default">Reset</button>
-    {{/autoForm}}
-</template>
\ No newline at end of file
diff --git a/dental/client/templates/backup & restore/backup.js b/dental/client/templates/backup & restore/backup.js
deleted file mode 100644
index fc14085..0000000
--- a/dental/client/templates/backup & restore/backup.js	
+++ /dev/null
@@ -1,65 +0,0 @@
-function getBackupType(type) {
-    var settingType = [
-        'Cpanel.Collection.Currency',
-        'Cpanel.Collection.Branch',
-        'Cpanel.Collection.Company',
-        'Cpanel.Collection.Setting',
-        'Cpanel.Collection.Currency',
-        'Events',
-        'Meteor.roles',
-        //files
-
-        'Dental.Collection.DiseaseHistory',
-        'Dental.Collection.DiseaseCategory',
-        'Dental.Collection.DiseaseItem',
-        'Dental.Collection.MaterialCostCategory',
-        'Dental.Collection.MaterialCostItem',
-        'Dental.Collection.OrderCategory',
-        'Dental.Collection.OrderItem',
-
-        //'Dental.Collection.SubCategories',
-        //'Dental.Collection.Units',
-        //'Dental.Collection.Products',
-        'Meteor.users'
-    ];
-    var defaultType = [
-        'Dental.Collection.CalendarEvent',
-        'Dental.Collection.Doctor',
-        'Dental.Collection.Laboratory',
-        'Dental.Collection.Deposit',
-        'Dental.Collection.MaterialCost',
-        'Dental.Collection.Patient',
-        'Dental.Collection.Payment',
-        'Dental.Collection.Purchase',
-        'Dental.Collection.Quotation',
-        'Dental.Collection.Register',
-        'Dental.Collection.Staff',
-        'Dental.Collection.Supplier',
-        'Dental.Collection.Treatment'
-        //Dental.Collection.
-    ];
-
-    if (type == 'Setting') {
-        return settingType;
-    } else if (type == 'Default') {
-        return defaultType;
-    } else {
-        return defaultType.concat(settingType);
-    }
-}
-AutoForm.hooks({
-    dental_backup: {
-        onSubmit: function (doc) {
-            debugger;
-            var backupType = doc.backupType;
-            var collections = getBackupType(backupType);
-            var module = Session.get('currentModule');
-            backup(module,"branchId",backupType,collections,doc.branch);
-
-            return false;
-        },
-        onError: function (formType, error) {
-            alertify.error(error.message);
-        }
-    }
-});
\ No newline at end of file
diff --git a/dental/client/templates/backup & restore/restore.html b/dental/client/templates/backup & restore/restore.html
deleted file mode 100644
index 51f1cfe..0000000
--- a/dental/client/templates/backup & restore/restore.html	
+++ /dev/null
@@ -1,21 +0,0 @@
-
-<template name="dental_restore">
-        {{#autoForm schema=Dental.Schema.Restore id="pos_restore"}}
-            <div class="row">
-                <div class="col-md-6">
-                    <label for="file-restore">Select a ZIP File:</label>
-                    <input id="file-restore" type="file"/><br/>
-                </div>
-            </div >
-            <div class="row">
-                <div class="col-md-6">
-                    {{> afQuickField name='branch'}}
-                </div>
-                <div class="col-md-6">
-                    {{> afQuickField name='restoreType'}}
-                </div>
-            </div>
-            <button type="submit" class="btn btn-primary">Restore</button>
-            <button type="reset" class="btn btn-default">Reset</button>
-        {{/autoForm}}
-</template>
diff --git a/dental/client/templates/backup & restore/restore.js b/dental/client/templates/backup & restore/restore.js
deleted file mode 100644
index 3a85f25..0000000
--- a/dental/client/templates/backup & restore/restore.js	
+++ /dev/null
@@ -1,43 +0,0 @@
-AutoForm.hooks({
-   dental_restore: {
-        onSubmit: function (doc) {
-            var zipFileToLoad = $("#file-restore").prop('files')[0];
-            var module = Session.get('currentModule');
-            restore(zipFileToLoad,module,doc.restoreType,doc.branch);
-            /*var fileName=zipFileToLoad.name;
-            var fileParts=fileName.split('-');
-            if(fileParts[1]==null || fileParts[1]!=doc.restoreType){
-                alertify.error('RestoreType is incorrect.');
-                return false;
-            }
-            debugger;
-            if(fileParts[2]==null || (doc.restoreType=='Default' && doc.branch!=fileParts[2])){
-                alertify.error('Restore branch is incorrect.');
-                return false;
-            }
-            var fileReader = new FileReader();
-            fileReader.onload = function (fileLoadedEvent) {
-                try {
-                    var zipFileLoaded = new JSZip(fileLoadedEvent.target.result);
-                    for (var key in zipFileLoaded.files) {
-                        var file = zipFileLoaded.files[key];
-                        Meteor.call('restoreOneCollection', file.asText(), function (error, result) {
-                            if (error) {
-                                alertify.error(error.message);
-                            }
-                        });
-                    }
-                    alertify.success("Database is Restored Successfully.");
-                } catch (error) {
-                    alertify.error(error);
-                }
-            };
-            fileReader.readAsArrayBuffer(zipFileToLoad);*/
-            return false
-        },
-        onError: function (formType, error) {
-            alertify.error(error.message);
-        }
-    }
-});
-
diff --git a/dental/client/templates/layout/navbar.html b/dental/client/templates/layout/navbar.html
index 916ab6f..ec9e085 100644
--- a/dental/client/templates/layout/navbar.html
+++ b/dental/client/templates/layout/navbar.html
@@ -1,6 +1,4 @@
 <template name="dental_navbar">
-    <ul class="nav navbar-nav">
-
         <li class="{{isActiveRoute name='dental.home'}}"><a href="{{pathFor 'dental.home'}}">Home</a></li>
 
         <li class="dropdown">
@@ -164,25 +162,7 @@
                     <a href="{{pathFor 'dental.orderItem'}}">Item</a>
                 </li>
 
-
             </ul>
         </li>
 
-        <!--Tool-->
-        <li class="dropdown">
-            <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">
-                Tool <span class="caret"></span>
-            </a>
-            <ul class="dropdown-menu" role="menu">
-                <li class="{{isActiveRoute name='dental.backup'}}">
-                    <a href="{{pathFor 'dental.backup'}}">Back up</a>
-                </li>
-
-                <li class="{{isActiveRoute name='dental.restore'}}">
-                    <a href="{{pathFor 'dental.restore'}}">Restore</a>
-                </li>
-
-            </ul>
-        </li>
-    </ul>
 </template>
diff --git a/dental/common/collections/backup.js b/dental/common/collections/backup.js
deleted file mode 100644
index 70582f0..0000000
--- a/dental/common/collections/backup.js
+++ /dev/null
@@ -1,25 +0,0 @@
-
-Dental.Schema.Backup = new SimpleSchema({
-    branch:{
-        type:String,
-        label:"Branch",
-        autoform: {
-            type: "select2",
-            options:function(){
-                return Dental.List.branchForUser();
-            }
-        },
-        optional:true
-    },
-
-    backupType:{
-        type:String,
-        label:"Backup Type",
-        autoform: {
-            type: "select2",
-            options:function() {
-                return Dental.List.backupAndRestoreTypes();
-            }
-        }
-    }
-});
\ No newline at end of file
diff --git a/dental/common/collections/restore.js b/dental/common/collections/restore.js
deleted file mode 100644
index b2bac9f..0000000
--- a/dental/common/collections/restore.js
+++ /dev/null
@@ -1,24 +0,0 @@
-
-Dental.Schema.Restore = new SimpleSchema({
-    branch:{
-        type:String,
-        label:"Branch",
-        autoform: {
-            type: "select2",
-            options:function(){
-                return Dental.List.branchForUser();
-            }
-        },
-        optional:true
-    },
-    restoreType:{
-        type:String,
-        label:"Restore Type",
-        autoform: {
-            type: "select2",
-            options:function(){
-               return Dental.List.backupAndRestoreTypes();
-            }
-        }
-    }
-});
\ No newline at end of file
diff --git a/dental/common/lib/config/module.js b/dental/common/lib/config/module.js
index 34b40d8..539f3a8 100644
--- a/dental/common/lib/config/module.js
+++ b/dental/common/lib/config/module.js
@@ -1,16 +1,44 @@
-/**
- * Module
- */
-Module = typeof Module === 'undefined' ? {} : Module;
-Meteor.isClient && Template.registerHelper('Module', Module);
-
-Module.Dental = {
-    name: 'Dental Clinic System',
-    version: '0.0.1',
-    summary: 'Dental Clinic System is ...',
-    roles: [
-        'admin',
-        'general',
-        'reporter'
-    ]
-};
+/**
+ * Module
+ */
+Module = typeof Module === 'undefined' ? {} : Module;
+Meteor.isClient && Template.registerHelper('Module', Module);
+
+Module.Dental = {
+  name: 'Dental Clinic System',
+  version: '0.0.1',
+  summary: 'Dental Clinic System is ...',
+  roles: [
+    'admin',
+    'general',
+    'reporter'
+  ],
+  dump: {
+    setting: [
+      'dental_staff',
+      'dental_doctor',
+      'dental_patientHistory',
+      'dental_diseaseCategory',
+      'dental_diseaseItem',
+      'dental_laboratory',
+      'dental_materialCostCategory',
+      'dental_materialCostItem',
+      'dental_supplier',
+      'dental_orderCategory',
+      'dental_orderItem',
+    ],
+    data: [
+      'dental_patient',
+      'dental_register',
+      'dental_treatment',
+      'dental_deposit',
+      'dental_calendarEvent',
+      'dental_payment',
+      'dental_specialRegister',
+      'dental_specialPayment',
+      'dental_quotation',
+      'dental_materialCost',
+      'dental_purchase',
+    ]
+  }
+};
diff --git a/dental/common/routers/backup.js b/dental/common/routers/backup.js
deleted file mode 100644
index a3dca6b..0000000
--- a/dental/common/routers/backup.js
+++ /dev/null
@@ -1,7 +0,0 @@
-Router.route('dental/backup', function () {
-    this.render('dental_backup');
-}, {
-    name: 'dental.backup',
-    header: {title: 'Backup', sub: '', icon: 'files-o'},
-    title:'dental-backup'
-});
\ No newline at end of file
diff --git a/dental/common/routers/restore.js b/dental/common/routers/restore.js
deleted file mode 100644
index 835f18b..0000000
--- a/dental/common/routers/restore.js
+++ /dev/null
@@ -1,7 +0,0 @@
-Router.route('dental/restore', function () {
-    this.render('dental_restore');
-}, {
-    name: 'dental.restore',
-    header: {title: 'restore', sub: '', icon: 'files-o'},
-    title:'dental-restore'
-});
\ No newline at end of file
diff --git a/packages/app-dump/.npm/package/.gitignore b/packages/app-dump/.npm/package/.gitignore
new file mode 100644
index 0000000..3c3629e
--- /dev/null
+++ b/packages/app-dump/.npm/package/.gitignore
@@ -0,0 +1 @@
+node_modules
diff --git a/packages/app-dump/.npm/package/README b/packages/app-dump/.npm/package/README
new file mode 100644
index 0000000..3d49255
--- /dev/null
+++ b/packages/app-dump/.npm/package/README
@@ -0,0 +1,7 @@
+This directory and the files immediately inside it are automatically generated
+when you change this package's NPM dependencies. Commit the files in this
+directory (npm-shrinkwrap.json, .gitignore, and this README) to source control
+so that others run the same versions of sub-dependencies.
+
+You should NOT check in the node_modules directory that Meteor automatically
+creates; if you are using git, the .gitignore file tells git to ignore it.
diff --git a/packages/app-dump/.npm/package/npm-shrinkwrap.json b/packages/app-dump/.npm/package/npm-shrinkwrap.json
new file mode 100644
index 0000000..ebaf63a
--- /dev/null
+++ b/packages/app-dump/.npm/package/npm-shrinkwrap.json
@@ -0,0 +1,373 @@
+{
+  "dependencies": {
+    "busboy": {
+      "version": "0.2.11",
+      "dependencies": {
+        "dicer": {
+          "version": "0.2.3",
+          "dependencies": {
+            "streamsearch": {
+              "version": "0.1.2"
+            }
+          }
+        },
+        "readable-stream": {
+          "version": "1.1.13",
+          "dependencies": {
+            "core-util-is": {
+              "version": "1.0.1"
+            },
+            "isarray": {
+              "version": "0.0.1"
+            },
+            "string_decoder": {
+              "version": "0.10.31"
+            },
+            "inherits": {
+              "version": "2.0.1"
+            }
+          }
+        }
+      }
+    },
+    "mongodb-backup": {
+      "version": "1.4.2",
+      "dependencies": {
+        "bson": {
+          "version": "0.4.16"
+        },
+        "fstream": {
+          "version": "1.0.8",
+          "dependencies": {
+            "graceful-fs": {
+              "version": "4.1.2"
+            },
+            "inherits": {
+              "version": "2.0.1"
+            },
+            "mkdirp": {
+              "version": "0.5.1",
+              "dependencies": {
+                "minimist": {
+                  "version": "0.0.8"
+                }
+              }
+            },
+            "rimraf": {
+              "version": "2.4.3",
+              "dependencies": {
+                "glob": {
+                  "version": "5.0.15",
+                  "dependencies": {
+                    "inflight": {
+                      "version": "1.0.4",
+                      "dependencies": {
+                        "wrappy": {
+                          "version": "1.0.1"
+                        }
+                      }
+                    },
+                    "minimatch": {
+                      "version": "3.0.0",
+                      "dependencies": {
+                        "brace-expansion": {
+                          "version": "1.1.1",
+                          "dependencies": {
+                            "balanced-match": {
+                              "version": "0.2.1"
+                            },
+                            "concat-map": {
+                              "version": "0.0.1"
+                            }
+                          }
+                        }
+                      }
+                    },
+                    "once": {
+                      "version": "1.3.2",
+                      "dependencies": {
+                        "wrappy": {
+                          "version": "1.0.1"
+                        }
+                      }
+                    },
+                    "path-is-absolute": {
+                      "version": "1.0.0"
+                    }
+                  }
+                }
+              }
+            }
+          }
+        },
+        "mongodb": {
+          "version": "2.0.45",
+          "dependencies": {
+            "mongodb-core": {
+              "version": "1.2.14",
+              "dependencies": {
+                "kerberos": {
+                  "version": "0.0.15",
+                  "dependencies": {
+                    "nan": {
+                      "version": "2.0.9"
+                    }
+                  }
+                }
+              }
+            },
+            "readable-stream": {
+              "version": "1.0.31",
+              "dependencies": {
+                "core-util-is": {
+                  "version": "1.0.1"
+                },
+                "isarray": {
+                  "version": "0.0.1"
+                },
+                "string_decoder": {
+                  "version": "0.10.31"
+                },
+                "inherits": {
+                  "version": "2.0.1"
+                }
+              }
+            },
+            "es6-promise": {
+              "version": "2.1.1"
+            }
+          }
+        },
+        "logger-request": {
+          "version": "3.4.0",
+          "dependencies": {
+            "basic-authentication": {
+              "version": "1.6.0",
+              "dependencies": {
+                "setheaders": {
+                  "version": "0.1.3"
+                }
+              }
+            },
+            "on-finished": {
+              "version": "2.3.0",
+              "dependencies": {
+                "ee-first": {
+                  "version": "1.1.1"
+                }
+              }
+            },
+            "transfer-rate": {
+              "version": "1.1.1"
+            },
+            "winston": {
+              "version": "1.0.1",
+              "dependencies": {
+                "async": {
+                  "version": "0.9.2"
+                },
+                "colors": {
+                  "version": "1.0.3"
+                },
+                "cycle": {
+                  "version": "1.0.3"
+                },
+                "eyes": {
+                  "version": "0.1.8"
+                },
+                "isstream": {
+                  "version": "0.1.2"
+                },
+                "pkginfo": {
+                  "version": "0.3.1"
+                },
+                "stack-trace": {
+                  "version": "0.0.9"
+                }
+              }
+            }
+          }
+        },
+        "tar": {
+          "version": "2.2.1",
+          "dependencies": {
+            "block-stream": {
+              "version": "0.0.8"
+            },
+            "inherits": {
+              "version": "2.0.1"
+            }
+          }
+        }
+      }
+    },
+    "mongodb-restore": {
+      "version": "1.4.2",
+      "dependencies": {
+        "bson": {
+          "version": "0.4.16"
+        },
+        "mongodb": {
+          "version": "2.0.45",
+          "dependencies": {
+            "mongodb-core": {
+              "version": "1.2.14",
+              "dependencies": {
+                "kerberos": {
+                  "version": "0.0.15",
+                  "dependencies": {
+                    "nan": {
+                      "version": "2.0.9"
+                    }
+                  }
+                }
+              }
+            },
+            "readable-stream": {
+              "version": "1.0.31",
+              "dependencies": {
+                "core-util-is": {
+                  "version": "1.0.1"
+                },
+                "isarray": {
+                  "version": "0.0.1"
+                },
+                "string_decoder": {
+                  "version": "0.10.31"
+                },
+                "inherits": {
+                  "version": "2.0.1"
+                }
+              }
+            },
+            "es6-promise": {
+              "version": "2.1.1"
+            }
+          }
+        },
+        "logger-request": {
+          "version": "3.4.0",
+          "dependencies": {
+            "basic-authentication": {
+              "version": "1.6.0",
+              "dependencies": {
+                "setheaders": {
+                  "version": "0.1.3"
+                }
+              }
+            },
+            "on-finished": {
+              "version": "2.3.0",
+              "dependencies": {
+                "ee-first": {
+                  "version": "1.1.1"
+                }
+              }
+            },
+            "transfer-rate": {
+              "version": "1.1.1"
+            },
+            "winston": {
+              "version": "1.0.1",
+              "dependencies": {
+                "async": {
+                  "version": "0.9.2"
+                },
+                "colors": {
+                  "version": "1.0.3"
+                },
+                "cycle": {
+                  "version": "1.0.3"
+                },
+                "eyes": {
+                  "version": "0.1.8"
+                },
+                "isstream": {
+                  "version": "0.1.2"
+                },
+                "pkginfo": {
+                  "version": "0.3.1"
+                },
+                "stack-trace": {
+                  "version": "0.0.9"
+                }
+              }
+            }
+          }
+        },
+        "tar": {
+          "version": "2.2.1",
+          "dependencies": {
+            "block-stream": {
+              "version": "0.0.8"
+            },
+            "fstream": {
+              "version": "1.0.8",
+              "dependencies": {
+                "graceful-fs": {
+                  "version": "4.1.2"
+                },
+                "mkdirp": {
+                  "version": "0.5.1",
+                  "dependencies": {
+                    "minimist": {
+                      "version": "0.0.8"
+                    }
+                  }
+                },
+                "rimraf": {
+                  "version": "2.4.3",
+                  "dependencies": {
+                    "glob": {
+                      "version": "5.0.15",
+                      "dependencies": {
+                        "inflight": {
+                          "version": "1.0.4",
+                          "dependencies": {
+                            "wrappy": {
+                              "version": "1.0.1"
+                            }
+                          }
+                        },
+                        "minimatch": {
+                          "version": "3.0.0",
+                          "dependencies": {
+                            "brace-expansion": {
+                              "version": "1.1.1",
+                              "dependencies": {
+                                "balanced-match": {
+                                  "version": "0.2.1"
+                                },
+                                "concat-map": {
+                                  "version": "0.0.1"
+                                }
+                              }
+                            }
+                          }
+                        },
+                        "once": {
+                          "version": "1.3.2",
+                          "dependencies": {
+                            "wrappy": {
+                              "version": "1.0.1"
+                            }
+                          }
+                        },
+                        "path-is-absolute": {
+                          "version": "1.0.0"
+                        }
+                      }
+                    }
+                  }
+                }
+              }
+            },
+            "inherits": {
+              "version": "2.0.1"
+            }
+          }
+        }
+      }
+    }
+  }
+}
diff --git a/packages/app-dump/README.md b/packages/app-dump/README.md
new file mode 100644
index 0000000..33245c0
--- /dev/null
+++ b/packages/app-dump/README.md
@@ -0,0 +1 @@
+# Metoer App-Dump
diff --git a/packages/app-dump/app-dump-tests.js b/packages/app-dump/app-dump-tests.js
new file mode 100644
index 0000000..1fa3758
--- /dev/null
+++ b/packages/app-dump/app-dump-tests.js
@@ -0,0 +1,5 @@
+// Write your tests here!
+// Here is an example.
+Tinytest.add('example', function (test) {
+  test.equal(true, true);
+});
diff --git a/packages/app-dump/app-dump.js b/packages/app-dump/app-dump.js
new file mode 100644
index 0000000..aa19271
--- /dev/null
+++ b/packages/app-dump/app-dump.js
@@ -0,0 +1,157 @@
+var Busboy, Backup, Restore;
+
+Backup = Npm.require('mongodb-backup');
+Restore = Npm.require('mongodb-restore');
+Busboy = Npm.require("busboy");
+
+Picker.route('/appDump', function (params, req, res, next) {
+    var filename, token, userToken;
+
+    /*** Backup ***/
+    if (req.method === 'GET') {
+        var backupOptions = {
+            uri: process.env.MONGO_URL,
+            tar: 'dump.tar',
+            parser: 'bson' // bson | json
+        };
+
+        // Check token
+        token = params.query.token || '';
+        check(token, String);
+        userToken = Meteor.users.findOne({
+            "services.resume.loginTokens.hashedToken": Accounts._hashLoginToken(token)
+        });
+        if (!userToken) {
+            res.statusCode = 401;
+            return res.end(JSON.stringify({backup: "Unauthorized"}));
+        }
+
+        // Check collections
+        if (params.query.collections) {
+            check(params.query.collections, String);
+            var collections = params.query.collections.split(',').map(function (col) {
+                return col.trim();
+            });
+            if (collections.length > 0) {
+                backupOptions.collections = collections;
+            }
+        }
+
+        // Check query
+        if (params.query.query) {
+            check(params.query.query, String);
+            try {
+                backupOptions.query = JSON.parse(params.query.query);
+            } catch (_error) {
+                res.statusCode = 401;
+                return res.end(JSON.stringify({backup: "Failed to parse JSON Query"}));
+            }
+        }
+
+        // File name
+        filename = params.query.filename + "_" + moment().format("YYMMDDHHmmss") + ".tar";
+
+        res.statusCode = 200;
+        res.setHeader('Content-disposition', "attachment; filename=" + filename);
+        backupOptions.stream = res;
+
+        Backup(backupOptions);
+    }
+
+    /*** Restore ***/
+    if (req.method === 'POST') {
+        var busboy = new Busboy({headers: req.headers});
+        var restoreOptions = {
+            uri: process.env.MONGO_URL,
+            parser: 'bson', // bson | json
+            dropCollections: false
+        };
+        var dropCollections = false, dropQuery = {};
+
+        // Field
+        busboy.on('field', Meteor.bindEnvironment(function (fieldname, val, fieldnameTruncated, valTruncated) {
+            console.log('filed-----------');
+            // Check token
+            if (fieldname === 'token') {
+                console.log('token: ' + val);
+                token = val || '';
+                check(token, String);
+                userToken = Meteor.users.findOne({
+                    "services.resume.loginTokens.hashedToken": Accounts._hashLoginToken(token)
+                });
+                if (!userToken) {
+                    res.statusCode = 401;
+                    return res.end(JSON.stringify({backup: "Unauthorized"}));
+                }
+            }
+
+            // Check drop collections
+            if (fieldname === 'dropCollections') {
+                console.log('dropCollections: ' + val);
+                val = val || 'false';
+                check(val, String);
+                if (val == 'false') {
+                    dropCollections = false;
+                } else if (val == 'true') {
+                    dropCollections = true;
+                } else {
+                    dropCollections = val.split(',').map(function (col) {
+                        return col.trim();
+                    });
+                }
+            }
+
+            // Check drop query
+            if (fieldname === 'dropQuery') {
+                console.log('dropQuery: ' + val);
+                val = val || '{}';
+                check(val, String);
+                try {
+                    dropQuery = JSON.parse(val);
+                } catch (_error) {
+                    res.statusCode = 401;
+                    return res.end(JSON.stringify({backup: "Failed to parse JSON Query"}));
+                }
+            }
+        }));
+
+        busboy.on('file', Meteor.bindEnvironment(function (fieldname, file, filename, encoding, mimetype) {
+            console.log('file---------------');
+            /***** Check drop collections and query *****/
+            if (_.isArray(dropCollections)) {
+                if (_.isEmpty(dropQuery)) {
+                    restoreOptions.dropCollections = dropCollections;
+                } else {
+                    console.log('Drop collection before restoring by manual');
+                    dropCollectionsManual(dropCollections, dropQuery);
+                }
+            } else {
+                restoreOptions.dropCollections = dropCollections;
+            }
+            /****** --Check drop collections and query-- *****/
+
+            restoreOptions.stream = file;
+            restoreOptions.callback = function () {
+                return res.end(JSON.stringify({restore: restoreOptions}));
+            };
+
+            Restore(restoreOptions);
+        }));
+
+        return req.pipe(busboy);
+    }
+});
+
+var dropCollectionsManual = function (collections, query) {
+    _.each(collections, function (col) {
+        Mongo.Collection.get(col).direct.remove(query, function (error) {
+            if (error) {
+                console.log('... is error (' + col + '): ' + error);
+                return false;
+            }
+        });
+    });
+
+    console.log('... is success');
+    return true;
+};
diff --git a/packages/app-dump/package.js b/packages/app-dump/package.js
new file mode 100644
index 0000000..f3260ee
--- /dev/null
+++ b/packages/app-dump/package.js
@@ -0,0 +1,42 @@
+Package.describe({
+    name: 'theara:app-dump',
+    version: '1.0.0',
+    // Brief, one-line summary of the package.
+    summary: 'Meteor App Dump',
+    // URL to the Git repository containing the source code for this package.
+    git: '',
+    // By default, Meteor will default to using README.md for documentation.
+    // To avoid submitting documentation, set this field to null.
+    documentation: 'README.md'
+});
+
+Npm.depends({
+    "busboy": "0.2.11",
+    "mongodb-backup": "1.4.2",
+    "mongodb-restore": "1.4.2"
+});
+
+Package.onUse(function (api) {
+    api.versionsFrom('1.1.0.3');
+
+    // SERVER
+    api.use([
+        'check',
+        'mongo',
+        'underscore',
+        'meteorhacks:picker@1.0.3',
+        'momentjs:moment@2.10.6',
+        'matb33:collection-hooks@0.8.1',
+        'dburles:mongo-collection-instances@0.3.4'
+    ], ['server']);
+
+    api.addFiles([
+        'app-dump.js'
+    ], ['server']);
+});
+
+Package.onTest(function (api) {
+    api.use('tinytest');
+    api.use('theara:app-dump');
+    api.addFiles('app-dump-tests.js');
+});
-- 
1.9.1

